class Quaternion {
  public:
  // a + (vx)*i + (vy)*j + (vz)*k
  double w, vx, vy, vz;

  static const Quaternion IDENTITY;

  static Quaternion From (double w, double vx, double vy, double vz);
  static Quaternion From (hParam w, hParam vx, hParam vy, hParam vz);
  static Quaternion From (Vector u, Vector v);
  static Quaternion From (Vector axis, double dtheta);

  Quaternion Plus (Quaternion b) const;
  Quaternion Minus (Quaternion b) const;
  Quaternion ScaledBy (double s) const;
  double     Magnitude () const;
  Quaternion WithMagnitude (double s) const;

  // Call a rotation matrix [ u' v' n' ]'; this returns the first and
  // second rows, where that matrix is generated by this quaternion
  Vector RotationU () const;
  Vector RotationV () const;
  Vector RotationN () const;
  Vector Rotate (Vector p) const;

  Quaternion ToThe (double p) const;
  Quaternion Inverse () const;
  Quaternion Times (Quaternion b) const;
  Quaternion Mirror () const;
};